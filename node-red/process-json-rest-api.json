[
    {
        "id": "c1a01d9b5d27c1c8",
        "type": "tab",
        "label": "Process JSON and REST API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "adf1e724b8455c4f",
        "type": "file in",
        "z": "c1a01d9b5d27c1c8",
        "name": "Read 1.json",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": true,
        "allProps": false,
        "x": 510,
        "y": 120,
        "wires": [
            [
                "f4f5122ddab5b06d"
            ]
        ]
    },
    {
        "id": "f4f5122ddab5b06d",
        "type": "json",
        "z": "c1a01d9b5d27c1c8",
        "name": "Parse JSON",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 690,
        "y": 120,
        "wires": [
            [
                "33d2a5d10c8a5a67"
            ]
        ]
    },
    {
        "id": "33d2a5d10c8a5a67",
        "type": "function",
        "z": "c1a01d9b5d27c1c8",
        "name": "Count fi_confidence > 0.99",
        "func": "let fiConfidenceValues = msg.payload.results.up.fi_confidence || [];\nlet count = fiConfidenceValues.filter(v => v > 0.99).length;\nmsg.payload = count;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 120,
        "wires": [
            [
                "81c4ce5d4703f31d"
            ]
        ]
    },
    {
        "id": "4518b2cb44d7b2c7",
        "type": "http request",
        "z": "c1a01d9b5d27c1c8",
        "name": "POST fi_confidence count",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Content-Type",
                "keyValue": "",
                "valueType": "other",
                "valueValue": ""
            }
        ],
        "x": 1600,
        "y": 120,
        "wires": [
            [
                "97c25b25f4abdf13"
            ]
        ]
    },
    {
        "id": "97c25b25f4abdf13",
        "type": "debug",
        "z": "c1a01d9b5d27c1c8",
        "name": "API Response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1820,
        "y": 120,
        "wires": []
    },
    {
        "id": "a5c43c0bb2cd5bc1",
        "type": "function",
        "z": "c1a01d9b5d27c1c8",
        "name": "Extract tr_values",
        "func": "let trValues = msg.payload.results.up.tr_values || [];\nlet resultArray = trValues.map(item => {\n    return item.replace(/\\D+/g, '');\n});\n\n// Parse values\n// by splitting any whitespace and newlines \\n\n// and keep only numeric values\nlet cleanValues = trValues\n    .flatMap(item => item.split(/\\s+/))\n    .map(value => value.trim())\n    .filter(value => /^\\d+$/.test(value));\n\n\nmsg.payload = cleanValues;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 180,
        "wires": [
            [
                "4606a04298a2e4c9"
            ]
        ]
    },
    {
        "id": "4606a04298a2e4c9",
        "type": "split",
        "z": "c1a01d9b5d27c1c8",
        "name": "Split tr_values",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 1140,
        "y": 180,
        "wires": [
            [
                "c4d5b61677d7355b"
            ]
        ]
    },
    {
        "id": "33bb11dd78a37f2d",
        "type": "http request",
        "z": "c1a01d9b5d27c1c8",
        "name": "Call REST API",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1560,
        "y": 180,
        "wires": [
            [
                "cb452c3d4b8e3e8f"
            ]
        ]
    },
    {
        "id": "cb452c3d4b8e3e8f",
        "type": "debug",
        "z": "c1a01d9b5d27c1c8",
        "name": "API Response for tr_values",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1860,
        "y": 180,
        "wires": []
    },
    {
        "id": "82f9dc11bf8753c9",
        "type": "comment",
        "z": "c1a01d9b5d27c1c8",
        "name": "Task 1: REST API Call",
        "info": "",
        "x": 180,
        "y": 60,
        "wires": []
    },
    {
        "id": "8c6c84f841712e24",
        "type": "catch",
        "z": "c1a01d9b5d27c1c8",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 130,
        "y": 420,
        "wires": [
            [
                "ee46e709f306bab6",
                "a7d0a20a6d389774"
            ]
        ]
    },
    {
        "id": "b4aa15dd533a7d8a",
        "type": "file",
        "z": "c1a01d9b5d27c1c8",
        "name": "Write Error Log",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 530,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "307a3173e37dd000",
        "type": "comment",
        "z": "c1a01d9b5d27c1c8",
        "name": "Error Handling",
        "info": "",
        "x": 140,
        "y": 360,
        "wires": []
    },
    {
        "id": "1a4635be608d34e3",
        "type": "file in",
        "z": "c1a01d9b5d27c1c8",
        "name": "Read 2.json",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": true,
        "allProps": false,
        "x": 510,
        "y": 180,
        "wires": [
            [
                "fa80b68fe17bdb12"
            ]
        ]
    },
    {
        "id": "5092a256cd3bdebf",
        "type": "inject",
        "z": "c1a01d9b5d27c1c8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "8490197798f1ce02",
                "e3959aba106e6d25"
            ]
        ]
    },
    {
        "id": "8b9dc54418133acc",
        "type": "debug",
        "z": "c1a01d9b5d27c1c8",
        "name": "ROOT_PATH",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 260,
        "wires": []
    },
    {
        "id": "d209036b624d7f52",
        "type": "debug",
        "z": "c1a01d9b5d27c1c8",
        "name": "WEBHOOK",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 300,
        "wires": []
    },
    {
        "id": "49ff98dabe34c7b1",
        "type": "inject",
        "z": "c1a01d9b5d27c1c8",
        "name": "TEST ${WEBHOOK}",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "WEBHOOK",
        "payloadType": "env",
        "x": 180,
        "y": 300,
        "wires": [
            [
                "d209036b624d7f52"
            ]
        ]
    },
    {
        "id": "3ab37fd0739727f6",
        "type": "inject",
        "z": "c1a01d9b5d27c1c8",
        "name": "TEST ${ROOT_PATH}",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ROOT_PATH",
        "payloadType": "env",
        "x": 180,
        "y": 260,
        "wires": [
            [
                "8b9dc54418133acc"
            ]
        ]
    },
    {
        "id": "8490197798f1ce02",
        "type": "function",
        "z": "c1a01d9b5d27c1c8",
        "name": "1.json path",
        "func": "let rootPath = env.get(\"ROOT_PATH\");\nmsg.filename = `${rootPath}/1.json`;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 120,
        "wires": [
            [
                "adf1e724b8455c4f"
            ]
        ]
    },
    {
        "id": "e3959aba106e6d25",
        "type": "function",
        "z": "c1a01d9b5d27c1c8",
        "name": "2.json path",
        "func": "let rootPath = env.get(\"ROOT_PATH\");\nmsg.filename = `${rootPath}/2.json`;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 180,
        "wires": [
            [
                "1a4635be608d34e3"
            ]
        ]
    },
    {
        "id": "c4d5b61677d7355b",
        "type": "function",
        "z": "c1a01d9b5d27c1c8",
        "name": "Build URL serials",
        "func": "let webhook = env.get(\"WEBHOOK\");\nmsg.url = `${webhook}/serial/${msg.payload}`;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 180,
        "wires": [
            [
                "33bb11dd78a37f2d"
            ]
        ]
    },
    {
        "id": "81c4ce5d4703f31d",
        "type": "function",
        "z": "c1a01d9b5d27c1c8",
        "name": "Build URL fi_confidence",
        "func": "let webhook = env.get(\"WEBHOOK\");\nmsg.url = `${webhook}/count/${msg.payload}`;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 120,
        "wires": [
            [
                "4518b2cb44d7b2c7"
            ]
        ]
    },
    {
        "id": "ee46e709f306bab6",
        "type": "function",
        "z": "c1a01d9b5d27c1c8",
        "name": "error log path",
        "func": "let rootPath = env.get(\"ROOT_PATH\");\nmsg.filename = `${rootPath}\\\\errors.log`;\nlet errorObject = msg.error;\nmsg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 420,
        "wires": [
            [
                "b4aa15dd533a7d8a"
            ]
        ]
    },
    {
        "id": "a7d0a20a6d389774",
        "type": "debug",
        "z": "c1a01d9b5d27c1c8",
        "name": "Log Errors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "error",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 500,
        "wires": []
    },
    {
        "id": "fa80b68fe17bdb12",
        "type": "json",
        "z": "c1a01d9b5d27c1c8",
        "name": "Parse JSON",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 690,
        "y": 180,
        "wires": [
            [
                "a5c43c0bb2cd5bc1"
            ]
        ]
    }
]