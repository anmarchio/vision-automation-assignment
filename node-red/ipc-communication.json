[
    {
        "id": "1f01fe57083a15d4",
        "type": "tab",
        "label": "IPC Communication",
        "disabled": false,
        "info": ""
    },
    {
        "id": "0d222ee35951571d",
        "type": "file in",
        "z": "1f01fe57083a15d4",
        "name": "Read 3.json",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "allProps": false,
        "x": 470,
        "y": 100,
        "wires": [
            [
                "7a1eecc26ebd3e09"
            ]
        ]
    },
    {
        "id": "7a1eecc26ebd3e09",
        "type": "json",
        "z": "1f01fe57083a15d4",
        "name": "Parse JSON",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 670,
        "y": 100,
        "wires": [
            [
                "ce8650479414fdd7"
            ]
        ]
    },
    {
        "id": "ce8650479414fdd7",
        "type": "function",
        "z": "1f01fe57083a15d4",
        "name": "Check Threshold",
        "func": "let detectedObjects = msg.payload.results?.oringe?.numberMinDetectedObjects || 0;\n\nif (detectedObjects >= 2) {\n    // Payload contains numberOfDetectedObjects\n    // '1' will be sent as DIO signal\n    msg.payload = 1;  \n    return msg;\n} else {\n    return null;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 100,
        "wires": [
            [
                "9deeec752a3a0b05",
                "807359536a3f8c06"
            ]
        ]
    },
    {
        "id": "9deeec752a3a0b05",
        "type": "tcp out",
        "z": "1f01fe57083a15d4",
        "name": "Send DIO Signal",
        "host": "0.0.0.0",
        "port": "500",
        "beserver": "client",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 1130,
        "y": 100,
        "wires": []
    },
    {
        "id": "b5cd12a21d435d5f",
        "type": "catch",
        "z": "1f01fe57083a15d4",
        "name": "Catch Errors",
        "scope": null,
        "uncaught": false,
        "x": 110,
        "y": 340,
        "wires": [
            [
                "8cd539504dfc5fca",
                "1179f74d22f6b51c"
            ]
        ]
    },
    {
        "id": "8cd539504dfc5fca",
        "type": "debug",
        "z": "1f01fe57083a15d4",
        "name": "Log Errors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "error",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 400,
        "wires": []
    },
    {
        "id": "8c0c4145d9919a56",
        "type": "status",
        "z": "1f01fe57083a15d4",
        "name": "TCP Connection",
        "scope": [
            "9deeec752a3a0b05"
        ],
        "x": 120,
        "y": 200,
        "wires": [
            [
                "554c736218505baf"
            ]
        ]
    },
    {
        "id": "554c736218505baf",
        "type": "function",
        "z": "1f01fe57083a15d4",
        "name": "Connection Statement",
        "func": "let rootPath = env.get(\"ROOT_PATH\");\nmsg.filename = `${rootPath}/errors.log`;\nif (msg.status.text === 'disconnected') {\n    node.warn('Connection is lost ...');\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 200,
        "wires": [
            [
                "24dd64bde856a0a2"
            ]
        ]
    },
    {
        "id": "c41a052f3f88f645",
        "type": "comment",
        "z": "1f01fe57083a15d4",
        "name": "Task 2: IPC Integration",
        "info": "",
        "x": 140,
        "y": 40,
        "wires": []
    },
    {
        "id": "807359536a3f8c06",
        "type": "debug",
        "z": "1f01fe57083a15d4",
        "name": "Debug Treshold",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 40,
        "wires": []
    },
    {
        "id": "c9ab8b092e8cb666",
        "type": "inject",
        "z": "1f01fe57083a15d4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "3f153042679ca7ce"
            ]
        ]
    },
    {
        "id": "3f153042679ca7ce",
        "type": "function",
        "z": "1f01fe57083a15d4",
        "name": "3.json path",
        "func": "let rootPath = env.get(\"ROOT_PATH\");\nmsg.filename = `${rootPath}/3.json`;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 100,
        "wires": [
            [
                "0d222ee35951571d"
            ]
        ]
    },
    {
        "id": "24dd64bde856a0a2",
        "type": "debug",
        "z": "1f01fe57083a15d4",
        "name": "Debug Output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "status.text",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 200,
        "wires": []
    },
    {
        "id": "251b02146df53692",
        "type": "comment",
        "z": "1f01fe57083a15d4",
        "name": "Send signal to 0.0.0.0:500",
        "info": "",
        "x": 1150,
        "y": 180,
        "wires": []
    },
    {
        "id": "1179f74d22f6b51c",
        "type": "function",
        "z": "1f01fe57083a15d4",
        "name": "errors path",
        "func": "let rootPath = env.get(\"ROOT_PATH\");\nmsg.filename = `${rootPath}/errors.log`;\nmsg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 340,
        "wires": [
            [
                "b7db54920b39722c"
            ]
        ]
    },
    {
        "id": "b7db54920b39722c",
        "type": "file",
        "z": "1f01fe57083a15d4",
        "name": "write error log",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 600,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "023319a27d522e03",
        "type": "comment",
        "z": "1f01fe57083a15d4",
        "name": "Exception Handling",
        "info": "",
        "x": 130,
        "y": 280,
        "wires": []
    }
]